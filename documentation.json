{
    "pipes": [],
    "interfaces": [
        {
            "name": "Column",
            "id": "interface-Column-5d521834f55b9b0743a1a5c76457cc3e8890dac24dea5bdad9a6729d7a8f9e48434b93d1164c541adcb7250a523293df660a59c24d9cc6ac97d70dcd95f0adc9",
            "file": "src/models/sortingTable.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Data {\n    date?: string,\n    type?: string,\n    category?: string,\n    payment_Method?: string,\n    label?: string,\n    marchant_Name?: string,\n    amount?: string,\n    balance?: string | number,\n    parentCategory?: string,\n    [key: string]: any\n}\nexport interface Column {\n    [key: string]: any,\n    title?: string,\n    dataIndex?: string,\n    isSearchable?: boolean,\n    isSortable?: boolean,\n}",
            "properties": [
                {
                    "name": "dataIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isSearchable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "isSortable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [
                {
                    "id": "index-declaration-5d521834f55b9b0743a1a5c76457cc3e8890dac24dea5bdad9a6729d7a8f9e48434b93d1164c541adcb7250a523293df660a59c24d9cc6ac97d70dcd95f0adc9",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Data",
            "id": "interface-Data-5d521834f55b9b0743a1a5c76457cc3e8890dac24dea5bdad9a6729d7a8f9e48434b93d1164c541adcb7250a523293df660a59c24d9cc6ac97d70dcd95f0adc9",
            "file": "src/models/sortingTable.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Data {\n    date?: string,\n    type?: string,\n    category?: string,\n    payment_Method?: string,\n    label?: string,\n    marchant_Name?: string,\n    amount?: string,\n    balance?: string | number,\n    parentCategory?: string,\n    [key: string]: any\n}\nexport interface Column {\n    [key: string]: any,\n    title?: string,\n    dataIndex?: string,\n    isSearchable?: boolean,\n    isSortable?: boolean,\n}",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "balance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "marchant_Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "parentCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "payment_Method",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [
                {
                    "id": "index-declaration-5d521834f55b9b0743a1a5c76457cc3e8890dac24dea5bdad9a6729d7a8f9e48434b93d1164c541adcb7250a523293df660a59c24d9cc6ac97d70dcd95f0adc9",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 175,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-93d3529ffd481113c6171f4b90c1ee23440ce032dbfc88792cfdb6775f360adeee3379e6379572b48e5613d87e91957649fb83de1c5a8caf933b8380d2e73392",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "[\n    {\n      dataIndex: 'category',\n      title: 'category',\n      isSortable: true,\n      isSearchable: true,\n\n    },\n    {\n      dataIndex: 'payment_Method',\n      title: 'Payment Method',\n      isSearchable: true,\n    },\n    {\n      dataIndex: 'type',\n      title: 'type', isSearchable: true,\n\n    },\n    {\n      dataIndex: 'marchant_Name',\n      title: 'Marchant Name',\n      isSearchable: true,\n    },\n    {\n      dataIndex: 'amount',\n      title: 'amount', isSearchable: true,\n\n    },\n    {\n      dataIndex: 'balance',\n      title: 'balance', isSearchable: true,\n\n    },\n    {\n      dataIndex: 'parentCategory',\n      title: 'parentCategory', isSearchable: true,\n\n    },\n    {\n      dataIndex: 'date',\n      title: 'Date',\n\n    },\n    {\n      dataIndex: 'label',\n      title: 'label', isSearchable: true,\n\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "dataSource",
                    "defaultValue": "[\n    {\n      date: '23-05-2022',\n      type: 'Expense',\n      category: 'Transport Costs',\n      payment_Method: 'zzzz Card',\n      label:\n        '980422 CB****5464 UBER *TRIP NL HELP.UBER.CO 10,23EUR 1EUR = 1,0000',\n      marchant_Name: 'UBER EURO',\n      amount: '-€10.23',\n      balance: '20',\n      parentCategory: 'Travel',\n    },\n    {\n      date: '24-05-2022',\n      type: 'Expense',\n      category: 'Net Salaries\t',\n      payment_Method: 'Transfer',\n      label: 'VIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XY',\n      marchant_Name: 'EMMANUELLE SALARY ',\n      amount: '-€944.47',\n      balance: '-€4,360.93',\n      parentCategory: 'Human Resources',\n    },\n    {\n      date: '23-05-2022',\n      type: 'Expense',\n      category: 'A Costs',\n      payment_Method: 'zzzz Card',\n      label:\n        '980422 CB****5464 UBER *TRIP NL HELP.UBER.CO 7,20EUR 1EUR = 1,0000',\n      marchant_Name: 'UBER EURO',\n      amount: '-7.20',\n      balance: 2,\n      parentCategory: 'Travel',\n    },\n    {\n      date: '18-05-2022',\n      type: 'Expense',\n      category: 'Transport Costs',\n      payment_Method: 'Credit Card',\n      label:\n        '980422 CB****5464 UBER *TRIP NL HELP.UBER.CO 7,28EUR 1EUR = 1,0000',\n      marchant_Name: 'UBER EURO',\n      amount: '-€7.28',\n      balance: '3',\n      parentCategory: 'Travel',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 58
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  columns = [\n    {\n      dataIndex: 'category',\n      title: 'category',\n      isSortable: true,\n      isSearchable: true,\n\n    },\n    {\n      dataIndex: 'payment_Method',\n      title: 'Payment Method',\n      isSearchable: true,\n    },\n    {\n      dataIndex: 'type',\n      title: 'type', isSearchable: true,\n\n    },\n    {\n      dataIndex: 'marchant_Name',\n      title: 'Marchant Name',\n      isSearchable: true,\n    },\n    {\n      dataIndex: 'amount',\n      title: 'amount', isSearchable: true,\n\n    },\n    {\n      dataIndex: 'balance',\n      title: 'balance', isSearchable: true,\n\n    },\n    {\n      dataIndex: 'parentCategory',\n      title: 'parentCategory', isSearchable: true,\n\n    },\n    {\n      dataIndex: 'date',\n      title: 'Date',\n\n    },\n    {\n      dataIndex: 'label',\n      title: 'label', isSearchable: true,\n\n    },\n  ];\n  dataSource = [\n    {\n      date: '23-05-2022',\n      type: 'Expense',\n      category: 'Transport Costs',\n      payment_Method: 'zzzz Card',\n      label:\n        '980422 CB****5464 UBER *TRIP NL HELP.UBER.CO 10,23EUR 1EUR = 1,0000',\n      marchant_Name: 'UBER EURO',\n      amount: '-€10.23',\n      balance: '20',\n      parentCategory: 'Travel',\n    },\n    {\n      date: '24-05-2022',\n      type: 'Expense',\n      category: 'Net Salaries\t',\n      payment_Method: 'Transfer',\n      label: 'VIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XYVIR Emmanuelle SCHMIT A9201112 salary February 2022 XY',\n      marchant_Name: 'EMMANUELLE SALARY ',\n      amount: '-€944.47',\n      balance: '-€4,360.93',\n      parentCategory: 'Human Resources',\n    },\n    {\n      date: '23-05-2022',\n      type: 'Expense',\n      category: 'A Costs',\n      payment_Method: 'zzzz Card',\n      label:\n        '980422 CB****5464 UBER *TRIP NL HELP.UBER.CO 7,20EUR 1EUR = 1,0000',\n      marchant_Name: 'UBER EURO',\n      amount: '-7.20',\n      balance: 2,\n      parentCategory: 'Travel',\n    },\n    {\n      date: '18-05-2022',\n      type: 'Expense',\n      category: 'Transport Costs',\n      payment_Method: 'Credit Card',\n      label:\n        '980422 CB****5464 UBER *TRIP NL HELP.UBER.CO 7,28EUR 1EUR = 1,0000',\n      marchant_Name: 'UBER EURO',\n      amount: '-€7.28',\n      balance: '3',\n      parentCategory: 'Travel',\n    },\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<gm-table\n  [columns]=\"columns\"\n  [dataSource]=\"dataSource\"\n  ariaLabel=\"'test label\"\n  [withSearch]=\"true\"\n></gm-table>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-f25837d362b44e0c7065ebcd0aa87f9e7f2d869ba74cdeedaf8779727ad74f97e91db909cd10c9633feaa5ef85ceb02ebc6d31647135bd1db3910f7ab60d243c",
            "file": "src/app/components/table/table.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gm-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTable columns, sets the order and configuration\n",
                    "description": "<p>Table columns, sets the order and configuration</p>\n",
                    "line": 15,
                    "type": "Column[]",
                    "decorators": []
                },
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTable data , api response normally\n",
                    "description": "<p>Table data , api response normally</p>\n",
                    "line": 20,
                    "type": "Data[]",
                    "decorators": []
                },
                {
                    "name": "withSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\ninclude search bar or not\n",
                    "description": "<p>include search bar or not</p>\n",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredDataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>array to mange sorting data</p>\n",
                    "line": 32,
                    "rawdescription": "\n\narray to mange sorting data\n"
                },
                {
                    "name": "search",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "<p>keeps track of search criteria</p>\n",
                    "line": 43,
                    "rawdescription": "\n\nkeeps track of search criteria\n"
                },
                {
                    "name": "selects",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "<p>search values for each field,\nextracted from dataSource automatically</p>\n",
                    "line": 38,
                    "rawdescription": "\n\nsearch values for each field,\nextracted from dataSource automatically\n"
                },
                {
                    "name": "sortType",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "<p>determine if search is asc or desc</p>\n",
                    "line": 48,
                    "rawdescription": "\n\ndetermine if search is asc or desc\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "getSearchSelector",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nsome logic runs to get search selectors based on DataSource\n",
                    "description": "<p>some logic runs to get search selectors based on DataSource</p>\n"
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nsort data in table\n",
                    "description": "<p>sort data in table</p>\n",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nreset search criteria\n",
                    "description": "<p>reset search criteria</p>\n"
                },
                {
                    "name": "selectOption",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showReset",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\ndetermine if reset button show be shown or not\n",
                    "description": "<p>determine if reset button show be shown or not</p>\n"
                },
                {
                    "name": "sortByKey",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "(a: any, b: any) => 1 | -1 | 0",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nhelper function for sort\n",
                    "description": "<p>helper function for sort</p>\n",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Data, Column } from '../../../models/sortingTable.model'\n@Component({\n  selector: 'gm-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n\n})\n\nexport class TableComponent implements OnInit {\n  /**\n   * Table columns, sets the order and configuration\n   */\n  @Input() columns: Column[] = [];\n\n  /**\n  * Table data , api response normally \n  */\n  @Input() dataSource: Data[] = [];\n  @Input() ariaLabel: string = '';\n\n  /**\n  * include search bar or not \n  */\n  @Input() withSearch: boolean = false\n\n  /**\n  * array to mange sorting data\n  */\n\n  filteredDataSource: any[] = [];\n\n  /**\n  * search values for each field,\n  * extracted from dataSource automatically\n  */\n  selects: { [key: string]: any } = {}\n\n  /**\n  * keeps track of search criteria\n  */\n  search: { [key: string]: any } = {}\n\n  /**\n  * determine if search is asc or desc\n  */\n  sortType: string | null = null\n\n  /**\n  * some logic runs to get search selectors based on DataSource\n  */\n  ngOnInit(): void {\n    this.filteredDataSource = this.dataSource\n    this.columns.forEach((el: any) => {\n      if (el.hasOwnProperty('isSearchable')) {\n\n        this.getSearchSelector(el?.dataIndex, el.title)\n      }\n    })\n  }\n\n\n\n  /**\n  * sort data in table\n  */\n  onSort(key: any) {\n    this.dataSource.sort(this.sortByKey(key));\n  };\n\n  /**\n   * helper function for sort\n   */\n  sortByKey(key: string) {\n    if (this.sortType === 'asc' || this.sortType === null) {\n\n      this.sortType = 'desc';\n      return function (a: any, b: any) {\n        if (a[key] > b[key]) return 1;\n        if (a[key] < b[key]) return -1;\n        return 0;\n      }\n    }\n    else {\n      this.sortType = 'asc';\n\n      return function (a: any, b: any) {\n        if (a[key] > b[key]) return -1;\n        if (a[key] < b[key]) return 1;\n        return 0;\n      }\n    }\n\n  }\n\n\n  getSearchSelector(key: string, title: string) {\n    // get search options\n    let tempSelect = this.dataSource.map((el: any) => ({ selectValue: el[key], title }));\n    let unique = [...new Map(tempSelect.map((item: any) => [item[\"selectValue\"], item])).values()];\n    this.selects[key] = [...new Set(unique)]\n\n  }\n\n  selectOption(event: any, key: any) {\n    // filter on Select\n    this.search[key] = event.target.value;\n\n    if (this.search[key] === '') {\n      delete this.search[key];\n    }\n\n    let searchValues = Object.values(this.search).filter(el => el !== '');\n\n    if (searchValues.length === 0) {\n      this.dataSource = this.filteredDataSource\n    } else {\n      for (let searchObj in this.search) {\n        this.dataSource = this.filteredDataSource.filter((el: any) => {\n          return el[searchObj] === this.search[searchObj]\n        });\n      }\n    }\n  }\n\n  /**\n   * determine if reset button show be shown or not\n   */\n  showReset() {\n    let searchValues = Object.values(this.search).filter(el => el !== '');\n    return searchValues.length\n  }\n\n  /**\n  * reset search criteria\n  */\n  resetFilter() {\n\n    this.dataSource = this.filteredDataSource\n    this.search = {}\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".table-wrapper {\n  padding: 10px;\n  overflow: auto hidden;\n\n  table {\n    width: 100%;\n    border-radius: 0.35rem;\n    overflow: hidden;\n\n    overflow-x: scroll;\n\n    td,\n    th {\n      text-align: center;\n      padding: 12px 8px;\n\n      // border-bottom: 2px solid white;\n      min-width: 150px;\n      width: 150px;\n      max-width: 150px;\n      height: 50px;\n    }\n\n    th {\n      background-color: #e6f0fd;\n      color: #336699;\n      font-weight: bold;\n    }\n\n    tr:nth-child(even) {\n      background-color: #f3f7fc;\n    }\n\n    tr {\n      transition: all 0.25s ease-in-out;\n\n      &:hover {\n        background: #e6f0fd;\n\n        td {\n          color: #336699;\n        }\n      }\n    }\n\n    td {\n      color: #333333;\n      vertical-align: middle;\n\n    }\n  }\n}\n\n\n// tooltip\n.tooltip {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.custom-tooltip {\n\n  background: #ffcc66;\n  color: #336699 !important;\n  font-size: 14px;\n  position: relative;\n  overflow: visible !important;\n\n  &:after {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-top: 8px solid #ffcc66;\n    bottom: -8px;\n    left: 50%;\n    transform: translateX(-50%)\n  }\n\n}\n\n.cdk-overlay-connected-position-bounding-box {\n  transform: translate(-0, 20px) !important;\n\n}\n\n// ******** filters ********\n\n.selects-wrapper {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 20px 10px;\n  margin: 10px 10px 0;\n\n  border-radius: 0.35rem;\n\n  background-color: #e6f0fd;\n\n  .select {\n    flex: 1 100%;\n\n    &-label {\n      font-weight: bold;\n      color: #336699;\n      margin-bottom: 0.25rem;\n      display: inline-block;\n    }\n\n    &-item {\n      white-space: nowrap;\n      width: 100%;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      min-height: 34px;\n      border-color: #336699;\n      border-radius: 0.35rem;\n\n      &:focus {\n        border-color: #336699;\n      }\n    }\n  }\n\n  .reset {\n    background: transparent;\n    color: #336699;\n\n    border: none;\n    height: 34px;\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    .app-icon {\n      font-size: 30px;\n      margin-top: 11px;\n    }\n  }\n}\n\n.sort-btns {\n  border: none;\n  background-color: transparent;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  .app-icon {\n    display: block;\n    color: #fff;\n    font-size: 32px;\n    font-weight: bold;\n\n    &.active {\n      color: #336699;\n    }\n\n    &:first-of-type {\n      margin-bottom: -18px;\n    }\n\n    &:last-of-type {\n      margin-top: -18px;\n    }\n  }\n}\n\n\n@media screen and (min-width: 768px) {\n\n  .selects-wrapper {\n\n\n    .select {\n      flex: 1;\n    }\n\n  }\n}",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"withSearch\">\n  <div class=\"selects-wrapper\">\n    <ng-container *ngFor=\"let select of selects | keyvalue\">\n      <div class=\"select\">\n        <label class=\"select-label\"> {{ select.value[0].title }}</label>\n        <select class=\"select-item\" (change)=\"selectOption($event, select.key)\">\n          <option value=\"\">please select</option>\n          <ng-container *ngFor=\"let select of select.value\">\n            <option [value]=\"select.selectValue\">\n              {{ select.selectValue }}\n            </option>\n          </ng-container>\n        </select>\n      </div>\n    </ng-container>\n    <button class=\"reset\" (click)=\"resetFilter()\" *ngIf=\"showReset()\">\n      <em class=\"app-icon\">close</em>\n    </button>\n  </div>\n</ng-container>\n\n<div *ngIf=\"columns\" class=\"table-wrapper\">\n  <table [attr.aria-label]=\"ariaLabel\">\n    <thead>\n      <tr>\n        <ng-container *ngFor=\"let column of columns\">\n          <th>\n            {{ column.title }}\n            <button\n              [class.sort-btns]=\"column.isSortable\"\n              *ngIf=\"column.isSortable\"\n              (click)=\"onSort(column.dataIndex)\"\n            >\n              <em [class.active]=\"sortType === 'asc'\" class=\"app-icon\"\n                >arrow_drop_up</em\n              >\n              <em [class.active]=\"sortType === 'desc'\" class=\"app-icon\"\n                >arrow_drop_down</em\n              >\n            </button>\n          </th>\n        </ng-container>\n      </tr>\n    </thead>\n\n    <tbody>\n      <ng-container *ngFor=\"let row of dataSource\">\n        <tr>\n          <ng-container *ngFor=\"let column of columns\">\n            <ng-container *ngIf=\"column.dataIndex\">\n              <td\n                [class.tooltip]=\"row[column.dataIndex].length > 50\"\n                [matTooltip]=\"row[column.dataIndex]\"\n                matTooltipClass=\"custom-tooltip\"\n                matTooltipPosition=\"above\"\n              >\n                {{ row[column.dataIndex] }}\n              </td>\n            </ng-container>\n          </ng-container>\n        </tr>\n      </ng-container>\n    </tbody>\n  </table>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-272f44282a2bd27cc3c033e471b2f1dc2d820cdbdd246704f4c5344adf9439cc676ac09350f8005afc445572820889429748df505c99cee570fc480388c2c66b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { TableComponent } from './components/table/table.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TableComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MainTable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/table/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/table/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent>",
                "defaultValue": "(args: TableComponent) => {\n    args.resetFilter = () => alert('sdsds')\n\n    return {\n        props: args,\n    }\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/table/Table.stories.ts": [
                {
                    "name": "MainTable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/table/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/table/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent>",
                    "defaultValue": "(args: TableComponent) => {\n    args.resetFilter = () => alert('sdsds')\n\n    return {\n        props: args,\n    }\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MainTable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 75,
                "coverageCount": "12/16",
                "status": "good"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/models/sortingTable.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Column",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/models/sortingTable.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Data",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}